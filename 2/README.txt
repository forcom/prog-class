［課題番号］2
［学籍番号］24115172
［氏名］Yoon SeungYong
［添付ファイル等の説明］
calc.c : 市販されているような電卓のソースコード
［プログラムの説明］
gitパブリックレポジトリ
https://github.com/forcom/prog-class.git

このプログラムは市販されている電卓のように、複数項の足し算、引き算、掛け算、割り算、メモリ機能のある電卓プログラムである。

コンパイル方法はUNIXのC言語コンパイラでcursesライブラリーを追加してコンパイルすればよい。
$ cc calc.c -o calc -lcurses

プログラムの使用方法は本物の電卓を打つように使えばよい。
ただし、CLRはC,c、CEはD,d、MRはM,m、MCはR,c、M+はP,pM-はQ,q、プログラムの終了はX,xキーを入力する。

［考察］
一番難しかったところは一文字ずつキーを入力することだった。
本来getchar()という標準ライブラリ関数があるが、この関数はバッファから一文字を取る関数であるためバッファが準備される前つまり改行文字の入力の前には文字を取ることができなかった。
仕方なく非標準ライブラリーを使うことにした。
MS-DOS環境ではconio.hのgetch()を使えばよいがここではUNIX環境であるのでcurses.hのmvgetch()を使用した。
ところが非標準ライブラリー関数は標準ライブラリー関数と相性が悪いのでprintf()などの全ての関数をprintw(), mvprintw()に変えた。
このところでかなり時間が使った。

そして実数を出力することが大変だった。
フォーマット文字列を使っても良いと思ったが、市販されている電卓では小数部の最後の０を表示しない。
だから自分で実数を文字列に変える関数を組むしかなかった。
実数を整数部と小数部に分けて、整数部は10に割った余りを文字列に入れて逆順に並べて、小数部は10をかけて整数だけを取って文字列に入れた。
ここで細かいバッグが結構できて苦労した。
また文字列を逆に並べる関数strrev()が標準関数と思ったらそうではないことを知ってそれも仕方なく自分で書いた。
（そこは以前にVisual Studioでstrrev.cを見た覚えがあってそれを真似した。）

本格的に電卓の計算を組んでいたとき、演算は演算子を入力したときに行われると思ったが、それはとんでもない勘違いだった。
演算は被演算子がなければできない。
それは、次の演算子を入力したとき前回の演算をしなければならないということである。
この辺で電卓の設計を全部変えて多項式を入力したら結果が得られるプログラムにしようとおもった。
でもそれはそれなりに式の誤りを検査しなければならないし、polish methodでプログラムを組まないといけないので結局あきらめた。
元の計画通り作り続けて最後には完成させた。

最初は入力する数字の符号も処理できるように設計したがそれの処理が大変ややこしかったので符号処理は止めた。
ところがメモリ機能に取り組んでいたとき符号処理が要ることに気づき、結局は符号処理を組まずにはいられなかった。
今のコードを少し変えれば入力するときにも符号を指定することができるようになる。
でも少し変えることでプログラムに予想外のバッグが起きるかもしれないし、手を加える時間が足りなかったのでここで止まった。


コンソールのカーソルの位置の調整に対して参考したサイト
http://pubs.opengroup.org/onlinepubs/7908799/xcurses/curses.h.html
［自己評価］A
［教えてもらった人の学籍番号、氏名］
